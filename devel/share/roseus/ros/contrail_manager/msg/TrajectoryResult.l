;; Auto-generated. Do not edit!


(when (boundp 'contrail_manager::TrajectoryResult)
  (if (not (find-package "CONTRAIL_MANAGER"))
    (make-package "CONTRAIL_MANAGER"))
  (shadow 'TrajectoryResult (find-package "CONTRAIL_MANAGER")))
(unless (find-package "CONTRAIL_MANAGER::TRAJECTORYRESULT")
  (make-package "CONTRAIL_MANAGER::TRAJECTORYRESULT"))

(in-package "ROS")
;;//! \htmlinclude TrajectoryResult.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass contrail_manager::TrajectoryResult
  :super ros::object
  :slots (_position_final _yaw_final ))

(defmethod contrail_manager::TrajectoryResult
  (:init
   (&key
    ((:position_final __position_final) (instance geometry_msgs::Vector3 :init))
    ((:yaw_final __yaw_final) 0.0)
    )
   (send-super :init)
   (setq _position_final __position_final)
   (setq _yaw_final (float __yaw_final))
   self)
  (:position_final
   (&rest __position_final)
   (if (keywordp (car __position_final))
       (send* _position_final __position_final)
     (progn
       (if __position_final (setq _position_final (car __position_final)))
       _position_final)))
  (:yaw_final
   (&optional __yaw_final)
   (if __yaw_final (setq _yaw_final __yaw_final)) _yaw_final)
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/Vector3 _position_final
    (send _position_final :serialization-length)
    ;; float64 _yaw_final
    8
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/Vector3 _position_final
       (send _position_final :serialize s)
     ;; float64 _yaw_final
       (sys::poke _yaw_final (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/Vector3 _position_final
     (send _position_final :deserialize buf ptr-) (incf ptr- (send _position_final :serialization-length))
   ;; float64 _yaw_final
     (setq _yaw_final (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;;
   self)
  )

(setf (get contrail_manager::TrajectoryResult :md5sum-) "5fe1bdb7dd6bd3879df39aed09b5c596")
(setf (get contrail_manager::TrajectoryResult :datatype-) "contrail_manager/TrajectoryResult")
(setf (get contrail_manager::TrajectoryResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Result
#
# position_final: the final commanded position of the movement
geometry_msgs/Vector3 position_final
float64 yaw_final

================================================================================
MSG: geometry_msgs/Vector3
# This represents a vector in free space. 
# It is only meant to represent a direction. Therefore, it does not
# make sense to apply a translation to it (e.g., when applying a 
# generic rigid transformation to a Vector3, tf2 will only apply the
# rotation). If you want your data to be translatable too, use the
# geometry_msgs/Point message instead.

float64 x
float64 y
float64 z
")



(provide :contrail_manager/TrajectoryResult "5fe1bdb7dd6bd3879df39aed09b5c596")


